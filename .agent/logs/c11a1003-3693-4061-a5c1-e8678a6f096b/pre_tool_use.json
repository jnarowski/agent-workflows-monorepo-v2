[
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "Read",
    "tool_input": {
      "file_path": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2/apps/web/src/server/index.ts"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "Glob",
    "tool_input": {
      "pattern": "**/prisma/schema.prisma"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "Grep",
    "tool_input": {
      "pattern": "PrismaClient",
      "path": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2/apps/web/src/server",
      "output_mode": "files_with_matches"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "Read",
    "tool_input": {
      "file_path": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2/apps/web/src/shared/prisma.ts"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "Read",
    "tool_input": {
      "file_path": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2/apps/web/package.json"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "Edit",
    "tool_input": {
      "file_path": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2/apps/web/src/shared/prisma.ts",
      "old_string": "import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  globalForPrisma.prisma = prisma;\n}",
      "new_string": "import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: isDevelopment\n    ? [\n        { emit: 'event', level: 'query' },\n        { emit: 'stdout', level: 'error' },\n        { emit: 'stdout', level: 'warn' },\n      ]\n    : ['error'],\n});\n\n// Pretty-print Prisma queries in development mode\nif (isDevelopment) {\n  prisma.$on('query' as never, (e: { query: string; params: string; duration: number }) => {\n    const colors = {\n      reset: '\\x1b[0m',\n      cyan: '\\x1b[36m',\n      yellow: '\\x1b[33m',\n      gray: '\\x1b[90m',\n      green: '\\x1b[32m',\n    };\n\n    // Format the query with better readability\n    const formattedQuery = e.query\n      .replace(/`main`\\./g, '') // Remove `main`.\n      .replace(/\\s+/g, ' ') // Normalize whitespace\n      .trim();\n\n    // Parse and format params\n    const params = JSON.parse(e.params);\n    const formattedParams = params.length > 0\n      ? params.map((p: unknown) => {\n          if (typeof p === 'string') return `\"${p}\"`;\n          if (p === null) return 'null';\n          if (typeof p === 'object') return JSON.stringify(p);\n          return String(p);\n        }).join(', ')\n      : '';\n\n    console.log(`${colors.cyan}prisma:query${colors.reset} ${colors.gray}(${e.duration}ms)${colors.reset}`);\n    console.log(`  ${colors.green}${formattedQuery}${colors.reset}`);\n    if (formattedParams) {\n      console.log(`  ${colors.yellow}Params: [${formattedParams}]${colors.reset}`);\n    }\n    console.log('');\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  globalForPrisma.prisma = prisma;\n}"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "WebSearch",
    "tool_input": {
      "query": "Prisma pretty print format queries development 2025"
    }
  },
  {
    "session_id": "c11a1003-3693-4061-a5c1-e8678a6f096b",
    "transcript_path": "/Users/jnarowski/.claude/projects/-Users-jnarowski-Dev-sourceborn-src-agent-workflows-monorepo-v2/c11a1003-3693-4061-a5c1-e8678a6f096b.jsonl",
    "cwd": "/Users/jnarowski/Dev/sourceborn/src/agent-workflows-monorepo-v2",
    "permission_mode": "bypassPermissions",
    "hook_event_name": "PreToolUse",
    "tool_name": "WebFetch",
    "tool_input": {
      "url": "https://github.com/prisma/prisma/issues/5026",
      "prompt": "Does Prisma have a built-in way to pretty print SQL queries with parameters in development mode? What are the official recommendations?"
    }
  }
]