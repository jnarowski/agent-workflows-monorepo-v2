{"type":"user_message","text":"Hello! Can you help me write a simple TypeScript function?","timestamp":1729512000000}
{"type":"message_start","message":{"id":"msg_1","role":"assistant"},"timestamp":1729512001000}
{"type":"content_block_start","index":0,"content_block":{"type":"text","text":""},"timestamp":1729512001100}
{"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"I'd be happy to help you write a TypeScript function! What would you like the function to do?"},"timestamp":1729512001200}
{"type":"content_block_stop","index":0,"timestamp":1729512001300}
{"type":"message_stop","timestamp":1729512001400}
{"type":"user_message","text":"I need a function to calculate the factorial of a number.","timestamp":1729512010000}
{"type":"message_start","message":{"id":"msg_2","role":"assistant"},"timestamp":1729512011000}
{"type":"content_block_start","index":0,"content_block":{"type":"thinking","thinking":""},"timestamp":1729512011100}
{"type":"content_block_delta","index":0,"delta":{"type":"thinking_delta","thinking":"I need to create a factorial function in TypeScript. The factorial of n (n!) is the product of all positive integers less than or equal to n. I'll use a recursive approach for clarity, though an iterative approach would also work."},"timestamp":1729512011200}
{"type":"content_block_stop","index":0,"timestamp":1729512011300}
{"type":"content_block_start","index":1,"content_block":{"type":"text","text":""},"timestamp":1729512011400}
{"type":"content_block_delta","index":1,"delta":{"type":"text_delta","text":"I'll create a factorial function for you. Let me write it:\n\n```typescript\nfunction factorial(n: number): number {\n  if (n < 0) {\n    throw new Error('Factorial is not defined for negative numbers');\n  }\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}\n\n// Example usage\nconsole.log(factorial(5)); // Output: 120\nconsole.log(factorial(0)); // Output: 1\n```\n\nThis function uses recursion to calculate the factorial. It handles edge cases like negative numbers, and returns 1 for 0 and 1 as base cases."},"timestamp":1729512011500}
{"type":"content_block_stop","index":1,"timestamp":1729512011600}
{"type":"content_block_start","index":2,"content_block":{"type":"tool_use","id":"tool_abc123","name":"Write","input":{}},"timestamp":1729512011700}
{"type":"content_block_delta","index":2,"delta":{"type":"input_json_delta","partial_json":"{\"file_path\":\"factorial.ts\",\"content\":\"function factorial(n: number): number {\\n  if (n < 0) {\\n    throw new Error('Factorial is not defined for negative numbers');\\n  }\\n  if (n === 0 || n === 1) {\\n    return 1;\\n  }\\n  return n * factorial(n - 1);\\n}\\n\\nexport { factorial };\\n\"}"},"timestamp":1729512011800}
{"type":"content_block_stop","index":2,"timestamp":1729512011900}
{"type":"message_stop","timestamp":1729512012000}
{"type":"tool_result","tool_use_id":"tool_abc123","content":"File created successfully at factorial.ts","is_error":false,"timestamp":1729512012100}
